name: kktree-backed

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: maven缓存
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: 构建maven
        run: mvn clean package -DskipTests

      - name: Check if jar file exists
        run: |
          if [ -f "ruoyi-admin/target/ruoyi-admin.jar" ]; then
            echo "Jar file exists."
          else
            echo "Jar file does not exist!" && exit 1
          fi
      - name: Deploy to ECS
        env:
          ECS_IP: ${{ secrets.SERVER_HOST }}
          ECS_PORT: ${{ secrets.SSH_PORT }}
          ECS_USER: ${{ secrets.SERVER_USERNAME }}
          ECS_SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          scp -o StrictHostKeyChecking=no -P ${{ secrets.SSH_PORT }} "$(pwd)/ruoyi-admin/target/ruoyi-admin.jar" ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/usr/local/javaProject/kktree-backed/ruoyi-admin.jar
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # 检查是否有正在运行的 init-backed.jar，如果有则停止它
            if pgrep -f "java.*ruoyi-admin.jar"; then
               pkill -f "java.*ruoyi-admin.jar"
            fi
            # 启动新的 ruoyi-admin.jar
            nohup java -jar /usr/local/javaProject/kktree-backed/ruoyi-admin.jar > /usr/local/javaProject/kktree-backed/app.log 2>&1 &
          EOF
      - name: Get commit information
        id: commit_info
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "COMMIT_MESSAGE=${COMMIT_MESSAGE}" >> $GITHUB_ENV
